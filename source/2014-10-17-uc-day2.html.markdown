---
title: アンダースタンディング コンピュテーション 2
date: 2014-10-17 08:29 UTC
tags: uc, ruby, programming, book
---

## 変数を使えるようにする

変数を簡約するために、変数名から値へのマッピングとして環境を導入する。

$$\langle x, \sigma \rangle \rightsquigarrow\_e \sigma(x)\ if\ x \in dom(\sigma)$$

実装は `Hash` を使うだけ。

```ruby
class Variable < Struct.new(:name)
  def reduce(environment)
    environment[name]
  end
end
```

そして簡約できる項の `#reduce` に環境を渡せるようにする。

たとえば足し算はこんな感じ。

$$\frac{\langle e\_1, \sigma \rangle \rightsquigarrow\_e e'\_1}
       {\langle e\_1 + e\_2, \sigma \rangle \rightsquigarrow\_e e'\_1 + e\_2}$$

$$\frac{\langle e\_2, \sigma \rangle \rightsquigarrow\_e e'\_2}
       {\langle v\_1 + e\_2, \sigma \rangle \rightsquigarrow\_e v\_1 + e'\_2}$$

$$\langle n\_1 + n\_2, \sigma \rangle \rightsquigarrow\_e n\ \mathsf{if}\ n = n\_1 + n\_2$$

```ruby
class Add < Struct.new(:left, :right)
  def reduce(environment)
    if left.reducible?
      Add.new(left.reduce(environment), right)
    elsif right.reducible?
      Add.new(left, right.reduce(environment))
    else
      Number.new(left.value + right.value)
    end
  end
end
```

かけ算はこうなる。

$$\frac{\langle e\_1, \sigma \rangle \rightsquigarrow\_e e'\_1}
       {\langle e\_1 \ast e\_2, \sigma \rangle \rightsquigarrow\_e e'\_1 \ast e\_2}$$

$$\frac{\langle e\_2, \sigma \rangle \rightsquigarrow\_e e'\_2}
       {\langle v\_1 \ast e\_2, \sigma \rangle \rightsquigarrow\_e v\_1 \ast e'\_2}$$

$$\langle n\_1 \ast n\_2, \sigma \rangle \rightsquigarrow\_e n\ \mathsf{if}\ n = n\_1 \times n\_2$$

```ruby
class Multiply
  def reduce(environment)
    if left.reducible?
      Multiply.new(left.reduce(environment), right)
    elsif right.reducible?
      Multiply.new(left, right.reduce(environment))
    else
      Number.new(left.value * right.value)
    end
  end
end
```

less than (<) はこう。

$$\frac{\langle e\_1, \sigma \rangle \rightsquigarrow\_e e'\_1}
       {\langle e\_1 < e\_2, \sigma \rangle \rightsquigarrow\_e e'\_1 < e\_2}$$

$$\frac{\langle e\_2, \sigma \rangle \rightsquigarrow\_e e'\_2}
       {\langle v\_1 < e\_2, \sigma \rangle \rightsquigarrow\_e v\_1 < e'\_2}$$

$$\langle n\_1 < n\_2, \sigma \rangle \rightsquigarrow\_e \tt{true}\ \mathsf{if}\ n\_1 < n\_2$$

$$\langle n\_1 < n\_2, \sigma \rangle \rightsquigarrow\_e \tt{false}\ \mathsf{if}\ n\_1 \geq n\_2$$

```ruby
class Reduce
  def reduce(environment)
    if left.reducible?
      LessThan(left.reduce(environment), right)
    elsif right.reducible?
      LessThan(left, right.reduce(environment))
    else
      Boolean.new(left.value < right.value)
    end
  end
end
```

### 仮想機械が環境を持てるようにする

```ruby
class Machine < Struct.new(:expression, :environment)
  def step
    self.expression = expression.reduce(environment)
  end
end  
```
